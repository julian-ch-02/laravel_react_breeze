version: "3.8"
services:
    nginx:
        image: nginx:1.20
        container_name: nginx-api
        links:
            - php-api
            - react-api
        volumes:
            - ./nginx:/etc/nginx/conf.d:delegated
            - ../:/var/www/html/api:delegated
            - ../../frontend:/var/www/html/react:delegated
        ports:
            - "80:80"
        networks:
            api_network:
                ipv4_address: 172.20.0.2
    php-api:
        working_dir: /var/www/html/api
        build:
            context: ./
            dockerfile: php/php.Dockerfile
        image: php8.2-api
        container_name: php-api
        volumes:
            - ../:/var/www/html/api:delegated
        networks:
            api_network:
                ipv4_address: 172.20.0.4
    react-api:
        working_dir: /var/www/html/react
        build:
            context: ../../frontend
            dockerfile: react.Dockerfile
        image: react-api
        ports:
            - "3000:3000"
        container_name: react-api
        volumes:
            - ../../frontend:/var/www/html/react:delegated
        tty: true
        networks:
            api_network:
                ipv4_address: 172.20.0.5

    mysql:
        image: mariadb:10.6.10
        container_name: api-db
        restart: "on-failure"
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: api
        ports:
            - "3306:3306"
        volumes:
            - api-mysql-data:/var/lib/mysql
        networks:
            api_network:
                ipv4_address: 172.20.0.3

volumes:
    api-mysql-data:
        external: true

networks:
    api_network:
        name: api_network
        driver: bridge
        ipam:
            config:
                - subnet: 172.20.0.0/16
